{"version":3,"sources":["Login/LoginPage.jsx","Login/RegisterPage.jsx","img/addSt.svg","img/edit.svg","img/exit.svg","img/give_task.svg","shared/stats.jsx","Teacher/viewstudent.jsx","Teacher/modal.jsx","Teacher/teacher.jsx","Students/student.jsx","img/plus.svg","Teacher/editTheory.jsx","Teacher/editTask.jsx","Teacher/base.jsx","Teacher/giveTask.jsx","App.jsx","reportWebVitals.jsx","index.js"],"names":["LoginPage","useHistory","useState","login","setlogin","password","setpassword","validPW","setvalidPW","validLogin","setvalidLogin","useEffect","length","test","className","Form","style","width","onSubmit","e","preventDefault","console","log","alert","FormGroup","Label","for","Input","type","name","invalid","onChange","target","value","placeholder","FormFeedback","marginTop","Button","RegisterPage","query","URLSearchParams","window","location","search","get","history","fullname","setFullname","id","setid","isStudent","setIsStudent","valid","testid","tempid","parseInt","isFinite","fetchName","a","axios","responce","data","getName","stName","confirmPW","setconfirmPW","validConfirm","setvalidConfirm","onClick","push","textAlign","Stats","student","stat","setStat","theories","setTheories","currIDTheory","setCurrIDTheory","currIDstudent","setCurrIDstudent","fetchTheories","fetchStats","fetchedStats","tempTheories","displayedStat","Total","Correct","TotalAttempts","i","j","unshift","getAll","PieWrapper","datum","myLabel","undefined","myLabels","bgColor","options","maintainAspectRatio","formattedTotal","labels","datasets","reduce","b","backgroundColor","formattedEasy","formattedMedium","formattedHard","Col","height","paddingTop","DisplayListTheories","map","theory","NavItem","maxWidth","NavLink","title","Row","marginRight","Nav","vertical","ViewStudent","activeTab","setActiveTab","toggle","tab","paddingRight","tabs","classnames","active","TabContent","TabPane","tabId","ModalAdd","isOpen","setStName","inviteLink","setInviteLink","Modal","post","then","origin","catch","request","ModalHeader","ModalBody","navigator","clipboard","writeText","ModalFooter","float","Teach","currID","setCurrID","stList","setStList","currentStudent","setcurrentStudent","barOpen","setBarOpen","modal","setModal","fetchStudents","students","getStudents","DisplayList","classNames","chosenSidebar","find","st","DisplayMobileList","selected","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","margin","disabled","src","Give","alt","Edit","AddSt","Exit","UncontrolledTooltip","placement","Student","to","EditTheory","setTitle","text","setText","put","marginLeft","defaultValue","delete","EditTask","task","setIsOpen","diff","setDiff","answer","answ","setAnsw","difficulty","check","inline","marginBottom","checked","currentTarget","Base","tasks","setTasks","currIDTask","setCurrIDTask","showSidebar","setShowSidebar","innerWidth","windowWidth","setWindowWidth","useGlobalEvent","onWindowResize","event","th","fetchTasks","tas","DisplayListTasks","substring","paddingBottom","PlusIc","dontShowMd","GiveTask","stlist","setstlist","tasklist","settasklist","theorylist","settheorylist","chosenTheory","setChosenTheory","chosenTasks","setChosenTasks","chosenStudents","setChosenStudents","fetchTheory","stl","tl","thl","onChangeTasks","newArray","includes","filter","onChangeStudents","DisplayStudents","DisplayTasks","DisplayTheory","tag","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7e27b34.chunk.js","sourcesContent":["import { useState, useEffect } from 'react' \nimport { useHistory } from 'react-router-dom';\nimport { \n\tButton, \n\tForm, \n\tFormFeedback,\n\tFormGroup, \n\tLabel, \n\tInput \n} from 'reactstrap';\n\nimport axios from 'axios'\n\nexport default function LoginPage() {\n\tconst history = useHistory();\n\t\n\tconst [login, setlogin] = useState('');\n\tconst [password, setpassword] = useState('');\n\n\tconst [validPW, setvalidPW] = useState(false);\n\t// 0 means all good\n\t// 1 means login is empty\n\t// 2 means login has non-digits\n\tconst [validLogin, setvalidLogin] = useState(0);\n\t\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (login.length === 0) {\n\t\t\talert(\"Введите логин\");\n\t\t\treturn;\n\t\t}\n\n\t\t// check for a number\n\t\t// https://stackoverflow.com/a/1779019/16029300\n\t\tif (!/^\\d+$/.test(login)) {\n\t\t\talert(\"Логин может содержать лишь цифры\")\n\t\t\treturn;\n\t\t}\n\n\t\tif (password.length === 0) {\n\t\t\talert(\"Введите пароль\")\n\t\t\treturn\n\t\t}\n\n\t\tconsole.log(login, password);\n\t}\n\n\tuseEffect(() => {\n\t\tif (login.length === 0) \n\t\t\tsetvalidLogin(1);\n\t\telse if (!/^\\d+$/.test(login))\n\t\t\tsetvalidLogin(2)\n\t\telse \n\t\t\tsetvalidLogin(0);\n\t\t\n\t\tif (password.length === 0) \n\t\t\tsetvalidPW(false);\n\t\telse \n\t\t\tsetvalidPW(true);\n\t\t\n\t}, [login, password, validLogin, validPW])\n\n\n    return (\n\t\t<div className = \"container\">\n\t\t\t<Form style = {{width: \"100%\"}} onSubmit = {onSubmit}>\n\t\t\t\t<h2>Вход</h2>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"exampleEmail\">Логин</Label>\n\t\t\t\t\t<Input type=\"numbers\" name=\"login\" invalid = {validLogin > 0}\n\t\t\t\t\tonChange = {(e) => setlogin(e.target.value)}\n\t\t\t\t\tplaceholder=\"Введите логин\"/>\n\t\t\t\t\t{validLogin === 1 && <FormFeedback>Логин не может быть пустым</FormFeedback>}\n\t\t\t\t\t{validLogin === 2 && <FormFeedback>Логин можешь содержать лишь цифры</FormFeedback>}\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup style = {{marginTop: \"2em\"}}>\n\t\t\t\t\t<Label for=\"examplePassword\">Пароль</Label>\n\t\t\t\t\t<Input type=\"password\" name=\"password\" invalid = {!validPW}\n\t\t\t\t\tonChange = {(e) => setpassword(e.target.value)}\n\t\t\t\t\tplaceholder=\"Введите пароль\" />\n\t\t\t\t\t<FormFeedback>Пароль не может быть пустым</FormFeedback>\n\t\t\t\t</FormGroup>\n\t\t\t\t<Button style = {{marginTop: \"10%\",  width: \"100%\"}} type = \"submit\">\n\t\t\t\t\tВойти\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</div>\n    )\n}\n\n","import { useHistory } from 'react-router-dom';\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport { \n\tButton, \n\tForm,\n\tFormGroup, \n\tFormFeedback,\n\tLabel, \n\tInput\n} from 'reactstrap';\n\nexport default function RegisterPage() {\n\tlet query = new URLSearchParams(window.location.search);\n\tquery = query.get('id');\n\tconst history = useHistory();\n\n\t// get name of a register\n\tconst [fullname, setFullname] = useState('')\n\tconst [id, setid] = useState(0); \n\tconst [isStudent, setIsStudent] = useState(false);\n\tfunction valid(testid) {\n\t\tlet tempid = parseInt(testid);\n\t\t// fix for real values\n\t\tif (isFinite(tempid) && tempid > 0) {\n\t\t\tsetIsStudent(true); \n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tsetIsStudent(false);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tconst fetchName = async () => {\n\t\tconst responce = await axios.get('https://6099651699011f0017140ca7.mockapi.io/students/' + query)\n\t\treturn responce.data;\n\t}\n\n\tuseEffect(() => {\n\t\tconst getName = async () => {\n\t\t\tif (query === null)\n\t\t\t\treturn\n\t\t\tconst name = await fetchName();\n\t\t\t\n\t\t\tif (valid(name.id)) {\n\t\t\t\tsetFullname(name.stName);\n\t\t\t\tsetid(name.id);\n\t\t\t}\n\t\t}\n\t\t// workaround for the 2nd useEffect i do later\n\t\t// i don't want to fucking hammer the server with a request for each keystoke lmao\n\t\tif (fullname.length === 0)\n\t\t\tgetName();\n\t})\n\n\tconst [password, setpassword] = useState('')\n\tconst [confirmPW, setconfirmPW] = useState('')\n\n\n\tconst [validPW, setvalidPW] = useState(false);\n\t// 0 means all goood\n\t// 1 means the 2nd pw is empty\n\t// 2 means passwords differ\n\tconst [validConfirm, setvalidConfirm] = useState(0);\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (password.length === 0) {\n\t\t\talert(\"Введите пароль\")\n\t\t\treturn\n\t\t}\n\t\t\n\t\tif (confirmPW.length === 0) {\n\t\t\talert(\"Введите подтверждение пароля\")\n\t\t\treturn\n\t\t}\n\n\t\tif (password !== confirmPW) {\n\t\t\talert(\"Пароли не совпадают\")\n\t\t\treturn\n\t\t}\n\t\t\n\n\t\t// fix create an actual request\n\t\tconsole.log(id, password, confirmPW);\n\t}\n\n\tuseEffect(() => {\n\t\tif (password.length === 0)\n\t\t\tsetvalidPW(false);\n\t\telse \n\t\t\tsetvalidPW(true);\n\n\t\tif (confirmPW !== password) {\n\t\t\tsetvalidConfirm(2);\n\t\t}\n\n\t\tif (confirmPW.length === 0)\n\t\t\tsetvalidConfirm(1);\n\t\telse if (confirmPW !== password)\n\t\t\tsetvalidConfirm(2);\n\t\telse \n\t\t\tsetvalidConfirm(0);\n\n\t}, [password, confirmPW, validPW, setvalidPW])\n\n    return (\n\t\t<div className = \"container\">\n\t\t\t{ // are we a student? \n\t\t\tisStudent ? <Form style = {{width: \"100%\"}} onSubmit = {onSubmit}>\n\t\t\t<h2>Регистрация</h2>\n\t\t\t\t<Label>Здравствуй, {fullname}</Label>\n\t\t\t\t<br></br>\n\t\t\t\t<Label>Ваш будущий логин - {query}</Label>\n\t\t\t\t<FormGroup style = {{marginTop: \"2em\"}}>\n\t\t\t\t\t<Label for=\"pwEnter\">Пароль</Label>\n\t\t\t\t\t<Input invalid = {!validPW} type=\"password\" \n\t\t\t\t\tname=\"password\" id=\"pwEnter\" placeholder=\"Введите пароль\" \n\t\t\t\t\tonChange = {(e) => {setpassword(e.target.value)}}/>\n\t\t\t\t\t<FormFeedback>Пароль не может быть пустой</FormFeedback>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup style = {{marginTop: \"2em\"}}>\n\t\t\t\t\t<Label for=\"pwConfirm\">Подтвердите пароль</Label>\n\t\t\t\t\t<Input invalid = {validConfirm > 0} type=\"password\"\n\t\t\t\t\tname=\"password\" id=\"pwConfirm\" placeholder=\"Введите пароль\"\n\t\t\t\t\tonChange = {(e) => {\n\t\t\t\t\t\tsetconfirmPW(e.target.value);\n\t\t\t\t\t}}/>\n\t\t\t\t\t{validConfirm === 1 && <FormFeedback>Пароль не может быть пустой</FormFeedback>}\n\t\t\t\t\t{validConfirm === 2 && <FormFeedback>Пароли отличаются</FormFeedback>}\n\t\t\t\t</FormGroup>\n\t\t\t\t<Button style = {{marginTop: \"10%\", width: \"100%\"}} type = \"submit\">Зарегистрироваться</Button>\n\t\t\t\t<Button style = {{marginTop: \"10%\", width: \"100%\"}}  onClick = {() => history.push('/')}>Назад</Button>\n\t\t\t</Form> :\n\t\t\t// alternate\n\t\t\t<Form>\n\t\t\t\t<h1 style = {{textAlign: \"center\"}}>Ошиблись ссылкой?</h1>\n\t\t\t\t<Button style = {{marginTop: \"10%\", width: \"100%\"}}  onClick = {() => history.push('/')}>Назад</Button>\n\t\t\t</Form>\n\t\t\t}\n\t\t</div>\n    )\n}\n\n","export default __webpack_public_path__ + \"static/media/addSt.7ac91716.svg\";","export default __webpack_public_path__ + \"static/media/edit.cbb14456.svg\";","export default __webpack_public_path__ + \"static/media/exit.f6ba0030.svg\";","export default __webpack_public_path__ + \"static/media/give_task.cee06c92.svg\";","// warningless commit duh\n// eslint-disable-next-line\nimport { useState, useEffect } from 'react'\nimport {Pie} from 'react-chartjs-2'\nimport axios from 'axios'\n\nimport {\n\tNavItem,\n\tNavLink,\n\tNav,\n\tRow, \n\tCol\n} from 'reactstrap'\n\nexport default function Stats({student}) {\n\n\tconst [stat, setStat] = useState([]);\n\tconst [theories, setTheories] = useState([])\n\tconst [currIDTheory, setCurrIDTheory] = useState(0);\n\tconst [currIDstudent, setCurrIDstudent] = useState(0);\n\n\tconst fetchTheories = async () => {\n\t\tconst responce = await axios.get('https://6099651699011f0017140ca7.mockapi.io/theories/')\n\t\treturn responce.data;\n\t}\n\n\n\tconst fetchStats = async () => {\n\t\tconst responce = await axios.get('https://6099651699011f0017140ca7.mockapi.io/stats/' + student.id);\n\t\treturn responce.data.stat;\n\t}\n\t\n\tuseEffect(() => {\n\t\tsetCurrIDstudent(parseInt(student.id));\n\t\tif (currIDstudent !== parseInt(student.id)){\n\t\t\tconst getAll = async () => {\n\t\t\t\tconst fetchedStats = await fetchStats();\n\t\t\t\tconst tempTheories = await fetchTheories();\n\t\t\t\tsetTheories(tempTheories);\n\t\t\t\t\n\t\t\t\tvar displayedStat = {id: \"0\", Total: [0, 0, 0], Correct: [0, 0, 0], TotalAttempts: 0}\n\n\t\t\t\tfor (let i = 0; i < fetchedStats.length; i++) {\n\t\t\t\t\tdisplayedStat.TotalAttempts += fetchedStats[i].TotalAttempts;\n\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\tdisplayedStat.Total[j] += fetchedStats[i].Total[j];\n\t\t\t\t\t\tdisplayedStat.Correct[j] += fetchedStats[i].Correct[j];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\tfetchedStats.unshift(displayedStat);\n\t\t\t\tsetStat(fetchedStats);\n\t\t\t}\n\t\t\tgetAll();\n\t\t}\n\t}, [student])\n\n\tconst PieWrapper = ({datum, myLabel}) => {\n\t\tif (datum === undefined) \n\t\t\treturn <></>\n\n\t\tconst myLabels = [\"Правильно\", \"Неправильно\"];\n\t\tconst bgColor = [\n\t\t\t'rgba(75, 192, 192, 0.5)',\n\t\t\t'rgba(255, 99, 132, 0.5)'\n\t\t]\n\t\tconst options = {\n\t\t\tmaintainAspectRatio: false\n\t\t};\n\n\t\tvar formattedTotal = {\n\t\t\tlabels: myLabels,\n\t\t\tdatasets: [{\n\t\t\t\tdata: [\n\t\t\t\t\tdatum.Correct.reduce((a, b) => a + b, 0), \n\t\t\t\t\tdatum.Total.reduce((a, b) => a + b, 0) - datum.Correct.reduce((a, b) => a + b, 0)\n\t\t\t\t],\n\t\t\t\tbackgroundColor: bgColor\n\t\t\t}]\n\t\t}\n\n\t\tvar formattedEasy = {\n\t\t\tlabels: myLabels,\n\t\t\tdatasets: [{\n\t\t\t\tdata: [datum.Correct[0], datum.Total[0] - datum.Correct[0]],\n\t\t\t\tbackgroundColor: bgColor\n\t\t\t}]\n\t\t}\n\n\t\tvar formattedMedium = {\n\t\t\tlabels: myLabels,\n\t\t\tdatasets: [{\n\t\t\t\tdata: [datum.Correct[1], datum.Total[1] - datum.Correct[1]],\n\t\t\t\tbackgroundColor: bgColor\n\t\t\t}]\n\t\t}\n\n\t\tvar formattedHard = {\n\t\t\tlabels: myLabels,\n\t\t\tdatasets: [{\n\t\t\t\tdata: [datum.Correct[2], datum.Total[2] - datum.Correct[2]],\n\t\t\t\tbackgroundColor: bgColor\n\t\t\t}]\n\t\t}\n\n\n\n\t\treturn <div>\n\t\t\t\t\t<div className = \"statsMrgn\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div style = {{textAlign: \"center\"}}>\n\t\t\t\t\t\t\t\tСумма\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div style = {{textAlign: \"center\"}}>\n\t\t\t\t\t\t\t\t<Pie data = {formattedTotal} width={200} height={200} options={options}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t<div className = \"statsMrgn\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div style = {{textAlign: \"center\"}}>\n\t\t\t\t\t\t\t\tБазовый\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div style = {{textAlign: \"center\"}}>\n\t\t\t\t\t\t\t\t<Pie data = {formattedEasy} width={200} height={200} options={options}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className = \"statsMrgn\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div style = {{textAlign: \"center\"}}>\n\t\t\t\t\t\t\t\tПродвинутый\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div style = {{textAlign: \"center\"}}>\n\t\t\t\t\t\t\t\t<Pie data = {formattedMedium} width={200} height={200} options={options}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className = \"statsMrgn\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div style = {{textAlign: \"center\"}}>\n\t\t\t\t\t\t\t\tВысокий\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div style = {{textAlign: \"center\"}}>\n\t\t\t\t\t\t\t\t<Pie data = {formattedHard} width={200} height={200} options={options}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style = {{paddingTop: \"40px\"}}>\n\t\t\t\t\t\tСумма по всем уровням (всего / прав. / неправ.): {formattedTotal.datasets[0].data[0] + formattedTotal.datasets[0].data[1]} / {formattedTotal.datasets[0].data[0]} / {formattedTotal.datasets[0].data[1]}\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\tБазовый уровень: {formattedEasy.datasets[0].data[0] + formattedEasy.datasets[0].data[1]} / {formattedEasy.datasets[0].data[0]} / {formattedEasy.datasets[0].data[1]}\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\tПродвинутый уровень: {formattedMedium.datasets[0].data[0] + formattedMedium.datasets[0].data[1]} / {formattedMedium.datasets[0].data[0]} / {formattedMedium.datasets[0].data[1]}\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\tВысокий уровень: {formattedHard.datasets[0].data[0] + formattedHard.datasets[0].data[1]} / {formattedHard.datasets[0].data[0]} / {formattedHard.datasets[0].data[1]}\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<b>Количество неудачных попыток: {datum.TotalAttempts}</b>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t}\n\n\tconst DisplayListTheories = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t{theories.map(theory => (\n\t\t\t\t<NavItem key = {theory.id} \n\t\t\t\tclassName = {currIDTheory === theory.id ? \"chosenSidebar\" : \"\"}\n\t\t\t\tstyle = {{maxWidth: \"300px\"}}>\t \n\t\t\t\t\t<NavLink onClick = {() => setCurrIDTheory(theory.id)}>\n\t\t\t\t\t\t\t{theory.title}\n\t\t\t\t\t</NavLink>\n\t\t\t\t</NavItem>\n\t\t\t))}\n\t\t\t</>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Row style = {{marginRight: \"0px\"}}>\n\t\t\t\t<Col className = \"sidebar\">\n\t\t\t\t\t<Nav vertical >\n\t\t\t\t\t\t<NavItem\n\t\t\t\t\t\tclassName = {currIDTheory === 0 && \"chosenSidebar\"}>\n\t\t\t\t\t\t\t<NavLink onClick = {() => setCurrIDTheory(0)}>\n\t\t\t\t\t\t\t\tОбщее\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t<DisplayListTheories/>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<PieWrapper datum = {stat[currIDTheory]}/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</div>\n\t)\n}\n","import {useState} from 'react'\nimport classnames from 'classnames'\n\nimport {\n\tTabPane, \n\tTabContent,\n\tNav, \n\tNavItem,\n\tNavLink,\n\tCol\n} from 'reactstrap'\n\nimport Stats from '../shared/stats.jsx'\n\nexport default function ViewStudent({student}) {\n\tconst [activeTab, setActiveTab] = useState(1);\n\n\tconst toggle = tab => {\n\t\tif (activeTab !== tab) \n\t\t\tsetActiveTab(tab);\n\t}\n\n\treturn (\n\t\t<Col style = {{paddingRight: \"0\"}}>\n\t\t\t<Nav tabs className = \"tabWrapper\">\n\t\t\t\t<NavItem>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tclassName={classnames({ active: activeTab === 1 })}\n\t\t\t\t\t\tonClick={() => { toggle(1); }} >\n\t\t\t\t\t\tСтатистика\n\t\t\t\t\t</NavLink>\n\t\t\t\t</NavItem>\n\t\t\t\t<NavItem>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tclassName={classnames({ active: activeTab === 2 })} \n\t\t\t\t\t\tonClick={() => { toggle(2); }}>\n\t\t\t\t\t\tЗадания\n\t\t\t\t\t</NavLink>\n\t\t\t\t</NavItem>\n\t\t\t</Nav>\n\t\t\t<TabContent activeTab={activeTab}>\n\t\t\t\t<TabPane tabId = {1}>\n\t\t\t\t\t<Stats student = {student}/>\n\t\t\t\t</TabPane>\n\t\t\t\t<TabPane tabId = {2}>\n\t\t\t\t\t{student.stName}\n\t\t\t\t</TabPane>\n\t\t\t</TabContent>\n\t\t</Col>\n\t)\n}\n","import {useState} from 'react'\nimport {\n\tModal, \n\tModalHeader,\n\tModalBody,\n\tModalFooter,\n\tButton,\n\tForm,\n\tInput,\n\tFormGroup,\n\tLabel\n} from 'reactstrap'\n\nimport axios from 'axios'\n\nexport default function ModalAdd({isOpen, toggle}) {\n\n\tconst [stName, setStName] = useState('');\n\tconst [inviteLink, setInviteLink] = useState('')\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\t\n\t\tif (stName === '') {\n\t\t\talert(\"Введите имя\");\n\t\t\treturn;\n\t\t}\n\t\trequest();\n\t}\n\n\tfunction request() {\n\t\tif (stName === '')\n\t\t\treturn;\n\t\t\n\t\t// change for the real api\n\t\taxios.post('https://6099651699011f0017140ca7.mockapi.io/students', \n\t\t\t{stName: stName})\n\t\t\t.then(function (responce) {\n\t\t\t\tconsole.log(responce.data.id);\n\t\t\t\tsetInviteLink(`${window.location.origin + '/register?id=' + responce.data.id}`);\n\t\t\t})\n\t\t\t.catch(function (responce) {\n\t\t\t\tconsole.log(responce)\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<Modal isOpen = {isOpen} toggle = {toggle}>\n\t\t\t{/* form is declared right here and not in ModalBody so that the onSubmit event works*/}\n\t\t\t<Form onSubmit = {onSubmit}>\n\t\t\t\t<ModalHeader>\n\t\t\t\t\tДобавление студента\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label for = \"fullname\">Имя студента</Label>\n\t\t\t\t\t\t<Input type = \"textarea\" id = \"fullname\"\n\t\t\t\t\t\tstyle = {{height: \"80px\"}}\n\t\t\t\t\t\tonChange = {(e) => setStName(e.target.value)}\n\t\t\t\t\t\tplaceholder = \"Введите ФИО студента\"></Input>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t{ \n\t\t\t\t\t\t// https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard\n\t\t\t\t\t\t// let's pray nobody uses IE11\n\t\t\t\t\t\tinviteLink.length !== 0 && \n\t\t\t\t\t\t\t<Label onClick = {() => {navigator.clipboard.writeText(inviteLink)}}>\n\t\t\t\t\t\t\t\tСсылка-приглашение (нажмите для копирования): {inviteLink}\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t}\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button onClick = {toggle} className = \"redBtn\" style = {{float: \"left\"}}>Отмена</Button>\n\t\t\t\t\t<Button type='submit' style = {{float: \"right\"}}>Добавить студента</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Form>\n\t\t</Modal>\n\t)\n}\n","import { useHistory } from 'react-router-dom';\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {\n\tNavbar,\n\tNavbarBrand,\n\tUncontrolledTooltip,\n\tRow,\n\tCol,\n\tNav,\n\tNavItem,\n\tNavLink,\n\tNavbarToggler,\n\tCollapse,\n} from 'reactstrap';\n\n//images \nimport AddSt from \"../img/addSt.svg\"\nimport Edit from \"../img/edit.svg\"\nimport Exit from \"../img/exit.svg\"\nimport Give from \"../img/give_task.svg\"\n\n\n//imports \nimport ViewStudent from './viewstudent.jsx'\nimport AddModal from './modal.jsx'\nimport classNames from 'classnames';\n\nexport default function Teach() {\n\tconst history = useHistory();\n\n\tconst [currID, setCurrID] = useState(-1);\n\tconst [stList, setStList] = useState([]);\n\tconst [currentStudent, setcurrentStudent] = useState({\"id\": \"0\", \"stName\": \"\"});\n\tconst [barOpen, setBarOpen] = useState(false);\n\n\t// modal\n\tconst [modal, setModal] = useState(false);\n\tconst toggle = () => setModal(!modal);\n\n\tuseEffect(() => {\n\t\tconst getStudents = async () => {\n\t\t\tconst students = await fetchStudents();\n\t\t\tsetStList(students)\n\t\t}\n\t\tgetStudents()\n\t}, [])\n\t\n\tconst fetchStudents = async () => {\n\t\tconst responce = await axios.get('https://6099651699011f0017140ca7.mockapi.io/students/')\n\t\treturn responce.data;\n\t}\n\n\tconst DisplayList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t{stList.map(student => (\n\t\t\t\t<NavItem key = {student.id} \n\t\t\t\tclassName = {classNames({chosenSidebar: currID === parseInt(student.id - 2)})}>\t \n\t\t\t\t\t<NavLink onClick = {() => {\n\t\t\t\t\t\tsetCurrID(student.id - 2)\n\t\t\t\t\t\tsetcurrentStudent(stList.find(st => st.id === student.id)) \n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{student.stName}\n\t\t\t\t\t</NavLink>\n\t\t\t\t</NavItem>\n\t\t\t))}\n\t\t\t</>\n\t\t)\n\t}\n\n\tconst DisplayMobileList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t{stList.map(student => (\n\t\t\t\t<option value = {student.id} key = {student.id}\n\t\t\t\tselected = {student.id - 2 === parseInt(currID)}>\n\t\t\t\t\t{student.stName}\n\t\t\t\t</option>\n\t\t\t))}\n\t\t\t</>\n\t\t)\n\t}\n\t\n    return (\n\t\t<div>\n\t\t\t<Navbar color = \"dark\" dark expand = \"md\">\n\t\t\t\t<NavbarBrand href = \"/teacher\">Личный кабинет</NavbarBrand>\n\t\t\t\t<NavbarToggler onClick = {() => setBarOpen(!barOpen)}></NavbarToggler>\n\t\t\t\t<Collapse isOpen = {barOpen} navbar>\n\t\t\t\t\t\t<select className = \"form-control possiblyHidden\" style = {{margin: \"10px 0\"}}\n\t\t\t\t\t\t\tonChange = {(e) => {\n\t\t\t\t\t\t\t\tsetCurrID(e.target.value - 2)\n\t\t\t\t\t\t\t\tsetcurrentStudent(stList.find(st => st.id === e.target.value))\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<option value = \"\" disabled selected>Выберите студента</option>\n\t\t\t\t\t\t\t<DisplayMobileList />\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<Nav navbar>\n\t\t\t\t\t\t\t<li className = \"iconRow\" style = {{color: \"#fff\"}} onClick = {() => history.push('/give')}>\n\t\t\t\t\t\t\t\t<img src = {Give} alt = \"Выдать задания\" id = \"giveic\"/>\n\t\t\t\t\t\t\t\t{barOpen && <span>Выдать задание</span>}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className = \"iconRow\" style = {{color: \"#fff\"}} onClick = {() => history.push('/base')}>\n\t\t\t\t\t\t\t\t<img src = {Edit} alt = \"Редактировать базу заданий\" id = \"editic\"/>\n\t\t\t\t\t\t\t\t{barOpen && <span>Редактировать базу заданий</span>}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className = \"iconRow\" style = {{color: \"#fff\"}} onClick = {toggle}>\n\t\t\t\t\t\t\t\t<img src = {AddSt} alt = \"Добавить студента\" id = \"addst\"/>\n\t\t\t\t\t\t\t\t{barOpen && <span>Добавить студента</span>}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className = \"iconRow\" style = {{color: \"#fff\"}} onClick = {() => history.push('/')}>\n\t\t\t\t\t\t\t\t<img src = {Exit} alt = \"Выйти\" id = \"exitic\"/>\n\t\t\t\t\t\t\t\t{barOpen && <span>Выйти</span>}\n\t\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t\t{// causes the transition and findDOMNode warnngs \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<UncontrolledTooltip placement= \"bottom\" target = \"addst\">\n\t\t\t\t\t\t\t\tДобавить студента\n\t\t\t\t\t\t\t</UncontrolledTooltip>\n\t\t\t\t\t\t\t<UncontrolledTooltip placement= \"bottom\" target = \"editic\">\n\t\t\t\t\t\t\t\tРедактировать базу заданий\n\t\t\t\t\t\t\t</UncontrolledTooltip>\n\t\t\t\t\t\t\t<UncontrolledTooltip placement= \"bottom\" target = \"giveic\">\n\t\t\t\t\t\t\t\tВыдать задания\n\t\t\t\t\t\t\t</UncontrolledTooltip>\n\t\t\t\t\t\t\t<UncontrolledTooltip placement= \"bottom\" target = \"exitic\">\n\t\t\t\t\t\t\t\tВыйти\n\t\t\t\t\t\t\t</UncontrolledTooltip>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Collapse>\n\t\t\t</Navbar>\n\t\t\t<Row style = {{marginRight: \"0\"}}>\n\t\t\t\t<Col className = \"sidebar dontShowMd\">\n\t\t\t\t\t<Nav vertical>\n\t\t\t\t\t\t<NavItem><NavLink>Список студентов</NavLink></NavItem>\n\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t<div className = \"dropdown-divider\"></div>\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t<DisplayList />\n\t\t\t\t\t</Nav>\n\t\t\t\t</Col>\n\t\t\t\t{ \n\t\t\t\tcurrID !== -1\n\t\t\t\t? <ViewStudent student = {currentStudent} />\n\t\t\t\t: <Col className = \"notChosenPlaceholder\">\n\t\t\t\t\t<p className = \"dontShowMd\">Нажмите на элемент слева для начала работы</p>\n\t\t\t\t\t<p className = \"possiblyHidden\">Список студентов доступен в выпадающем меню</p>\n\t\t\t\t  </Col>\n\t\t\t\t}\n\t\t\t</Row>\n\t\t\t<AddModal isOpen = {modal} toggle = {toggle}/>\n\t\t</div>\n    )\n}\n","import { Link } from 'react-router-dom';\n// eslint-disable-next-line\nimport { Button, Form, FormGroup, Label, Input, FormText, CardTitle, NavItem } from 'reactstrap';\nimport {\n\tNavbar,\n\tNavbarBrand,\n\tUncontrolledTooltip\n} from 'reactstrap';\nimport Stats from '../shared/stats.jsx'\n\n//images \n// import bgstats from \"../img/bgstats.svg\"\n// import bgtasks from \"../img/bgtasks.svg\"\nimport Exit from \"../img/exit.svg\"\n\nexport default function Student() {\n\n    return (\n\t\t<div>\n\t\t\t<Navbar color = \"dark\" dark>\n\t\t\t\t<NavbarBrand href = \"/\">Личный кабинет</NavbarBrand>\n\t\t\t\t<div className = \"iconRow\">\n\t\t\t\t\t<Link id = \"tasktxt\" to = \"/student\" style={{color: 'white', paddingTop: \"5px\"}}>Задания</Link>\n\t\t\t\t\t<UncontrolledTooltip placement= \"bottom\" target = \"tasktxt\">\n\t\t\t\t\t\tРешайте задания, выданные преподавателем\n\t\t\t\t\t</UncontrolledTooltip>\n\t\t\t\t\t<img src = {Exit} alt = \"Выйти\" id = \"exitic\"/>\n\t\t\t\t\t<UncontrolledTooltip placement= \"bottom\" target = \"exitic\">\n\t\t\t\t\t\tВыйти\n\t\t\t\t\t</UncontrolledTooltip>\n\t\t\t\t</div>\n\t\t\t</Navbar>\n\t\t\t<Stats student = {{\"id\": 3}}/>\n\t\t</div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/plus.11fdb7a9.svg\";","import { useState, useEffect} from 'react'\nimport {\n\tCol,\n\tForm,\n\tInput,\n\tFormGroup,\n\tLabel,\n\tButton,\n} from 'reactstrap'\n\nimport axios from 'axios'\n\nexport default function EditTheory({theory}) {\n\tif (theory === undefined) {\n\t\ttheory = {\n\t\t\"title\": \"\",\n\t\t\"id\": \"0\", \n\t\t\"text\": \"\"\n\t\t}\n\t}\n\n\tconst [title, setTitle] = useState('');\n\tconst [text, setText] = useState('');\n\n\t\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconsole.log(theory.id, title, text);\n\n\t\tif (!title) {\t\n\t\t\talert(\"Введите название теории!\")\n\t\t\treturn;\n\t\t}\n\t\tif (!text) {\n\t\t\talert(\"Введите текст теории!\")\n\t\t\treturn;\n\t\t}\n\n\t\tif (theory.id !== '0') {\n\t\t\taxios.put('https://6099651699011f0017140ca7.mockapi.io/theories/' + theory.id,\n\t\t\t{\n\t\t\t\ttitle: title,\n\t\t\t\tid: theory.id,\n\t\t\t\ttext: text\n\t\t\t})\n\t\t\t.then(function(responce) {\n\t\t\t\tconsole.log(responce)\n\t\t\t})\n\t\t\t.catch(function(responce) {\n\t\t\t\tconsole.log(responce)\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\taxios.post('https://6099651699011f0017140ca7.mockapi.io/theories/',\n\t\t\t{\n\t\t\t\ttitle: title,\n\t\t\t\tid: theory.id,\n\t\t\t\ttext: text\n\t\t\t})\n\t\t\t.then(function(responce) {\n\t\t\t\tconsole.log(responce)\n\t\t\t})\n\t\t\t.catch(function(responce) {\n\t\t\t\tconsole.log(responce)\n\t\t\t})\n\t\t}\n\t}\n\n\tconst onDelete = () => {\n\t\taxios.delete('https://6099651699011f0017140ca7.mockapi.io/theories/' + theory.id)\n\t\t.then(function(responce) {\n\t\t\tconsole.log(responce);\n\t\t})\n\t\t.catch(function(responce) {\n\t\t\tconsole.log(responce);\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tif (theory.id === '0')\n\t\t\treturn;\n\t\tsetTitle(theory.title)\n\t\tsetText(theory.text);\n\t}, [theory])\n\n\treturn (\n\t\t<Col>\t\n\t\t\t<Form onSubmit = {onSubmit} style = {{marginTop: \"10px\", marginLeft: \"15px\"}}>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for = \"title\">Название темы</Label>\n\t\t\t\t\t<Input type = \"textarea\" key = {theory.id}\n\t\t\t\t\tdefaultValue = {theory.id === '0' ? '' : theory.title} \n\t\t\t\t\tplaceholder = {theory.id === '0' ? 'Введите название темы' : ''}\n\t\t\t\t\tonChange = {(e) => setTitle(e.target.value)}></Input>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for = \"title\">Текст материала</Label>\n\t\t\t\t\t<Input type = \"textarea\" key = {theory.id}\n\t\t\t\t\tdefaultValue = {theory.id === '0' ? '' : theory.text}\n\t\t\t\t\tplaceholder = {theory.id === '0' ? 'Введите текст материала' : ''}\n\t\t\t\t\tonChange = {(e) => setText(e.target.value)}\n\t\t\t\t\tstyle = {{height: \"500px\"}}></Input>\n\t\t\t\t</FormGroup>\n\t\t\t\t<br></br>\n\t\t\t\t{theory.id !== '0' && \n\t\t\t\t<Button className = \"redBtn\" onClick = {onDelete}>Удалить теорию</Button>\n\t\t\t\t}\n\t\t\t\t<Button type='submit' style = {{float: \"right\"}}>Добавить теорию</Button>\n\t\t\t</Form>\n\t\t</Col>\n\t)\n}\n","import { useState, useEffect } from 'react'\nimport {\n\tCol,\n\tForm,\n\tInput,\n\tFormGroup,\n\tLabel,\n\tButton\n} from 'reactstrap'\n\nimport axios from 'axios'\n\nexport default function EditTask({task}) {\n\tif (task === undefined) {\n\t\ttask = {\n\t\t\t\"id\": \"0\",\n\t\t\t\"text\": \"\",\n\t\t\t\"answer\": \"\",\n\t\t\t\"isOpen\": false,\n\t\t\t\"difficulty\": 1\n\t\t}\n\t}\n\n\t// because react for some fucking reason uses\n\t// literals and not indexes for options in select \n\n\tconst [text, setText] = useState(task.text);\n\tconst [isOpen, setIsOpen] = useState(task.isOpen);\n\tconst [diff, setDiff] = useState('1');\n\tconst [answ, setAnsw] = useState(task.answer);\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconsole.log(task.id, text, isOpen, diff, answ);\n\n\t\tif (!text) {\n\t\t\talert(\"Введите текст задания!\") \n\t\t\treturn;\n\t\t}\n\t\tif (!answ && !isOpen) {\n\t\t\talert(\"Введите ответ на задание!\")\n\t\t\treturn;\n\t\t}\n\n\t\tif (isOpen && answ) setAnsw('')\n\n\t\tif (task.id !== '0') {\n\t\t\taxios.put('https://6099651699011f0017140ca7.mockapi.io/tasks/' + task.id,\n\t\t\t{\n\t\t\t\tid: task.id,\n\t\t\t\ttext: text,\n\t\t\t\tanswer: answ,\n\t\t\t\tisOpen: isOpen,\n\t\t\t\tdifficulty: diff\n\t\t\t})\n\t\t\t.then(function(responce) {\n\t\t\t\tconsole.log(responce)\n\t\t\t})\n\t\t\t.catch(function(responce) {\n\t\t\t\tconsole.log(responce)\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\taxios.post('https://6099651699011f0017140ca7.mockapi.io/tasks',\n\t\t\t{\n\t\t\t\tid: task.id,\n\t\t\t\ttext: text,\n\t\t\t\tanswer: answ,\n\t\t\t\tisOpen: isOpen,\n\t\t\t\tdifficulty: diff\n\t\t\t})\n\t\t\t.then(function(responce) {\n\t\t\t\tconsole.log(responce)\n\t\t\t})\n\t\t\t.catch(function(responce) {\n\t\t\t\tconsole.log(responce)\n\t\t\t})\n\t\t}\n\t}\n\n\tconst onDelete = () => {\n\t\taxios.delete('https://6099651699011f0017140ca7.mockapi.io/tasks/' + task.id)\n\t\t.then(function(responce) {\n\t\t\tconsole.log(responce);\n\t\t})\n\t\t.catch(function(responce) {\n\t\t\tconsole.log(responce);\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tif (task.id === '0')\n\t\t\treturn;\n\t\tsetText(task.text);\n\t\tsetIsOpen(task.isOpen);\n\t\tsetDiff(task.difficulty);\n\t\tsetAnsw(task.answer);\n\t}, [task])\n\n\n\t// reason for `key` in text areas is so that they update their defaultValue prop \n\t// same for editTheory.jsx\n\treturn (\n\t\t<Col>\n\t\t\t<Form onSubmit = {onSubmit} style = {{marginTop: \"10px\", marginLeft: \"15px\"}}>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for = \"diff\">Сложность задания</Label>\n\t\t\t\t\t<select className = \"form-control\" id = \"diff\"\n\t\t\t\t\t\tonChange = {(e) => setDiff(e.target.value)}>\n\t\t\t\t\t\t\t<option value = '1' selected = {task.difficulty === '1'}>Базовый</option>\n\t\t\t\t\t\t\t<option value = '2' selected = {task.difficulty === '2'}>Продвинутый</option>\n\t\t\t\t\t\t\t<option value = '3' selected = {task.difficulty === '3'}>Высокий</option>\n\t\t\t\t\t</select>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for = \"text\">Текст задания</Label>\n\t\t\t\t\t<Input type = \"textarea\" id = \"text\" key = {task.id}\n\t\t\t\t\tdefaultValue = {task.id === '0' ? '' : task.text}\n\t\t\t\t\tplaceholder  = {task.id === '0' ? 'Введите текст задания' : ''}\n\t\t\t\t\tstyle = {{height: \"250px\"}}\n\t\t\t\t\tonChange = {(e) => setText(e.target.value)}></Input>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup check inline \n\t\t\t\tstyle = {{marginBottom: \"25px\"}}>\n\t\t\t\t\t<Label check>\n\t\t\t\t\t\t<Input type = \"checkbox\" checked = {task.isOpen} key = {task.id}\n\t\t\t\t\t\tonChange = {(e) => setIsOpen(e.currentTarget.checked)}/>\n\t\t\t\t\t\tОткрытый вопрос (ответ отправляется преподавателю)\n\t\t\t\t\t</Label>\n\t\t\t\t</FormGroup>\n\t\t\t\t{!task.isOpen && <FormGroup>\n\t\t\t\t\t<Label for = \"answ\">Ответ на задание</Label>\n\t\t\t\t\t<Input type = \"textarea\" id = \"answ\" key = {task.id}\n\t\t\t\t\tdefaultValue = {task.id === '0' ? '' : task.answer}\n\t\t\t\t\tplaceholder  = {task.id === '0' ? 'Введите ответ' : ''}\n\t\t\t\t\tstyle = {{height: \"250px\"}}\n\t\t\t\t\tonChange = {(e) => setAnsw(e.target.value)}></Input>\n\t\t\t\t</FormGroup> }\n\t\t\t\t<br></br>\n\t\t\t\t{task.id !== '0' && \n\t\t\t\t<Button type='submit' className = \"redBtn\" onClick = {onDelete}>Удалить задание</Button>}\n\t\t\t\t<Button type='submit' style = {{float: \"right\"}}>Добавить задание</Button>\n\t\t\t</Form>\n\t\t</Col>\n\t)\n}\n","import React, { useEffect, useState, SyntheticEvent } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { useGlobalEvent } from 'beautiful-react-hooks'\n\nimport {\n\tTabPane, \n\tTabContent,\n\tNav, \n\tNavItem,\n\tNavLink,\n\tRow, Col, \n\tUncontrolledTooltip,\n\tButton\n} from 'reactstrap'\n\nimport axios from 'axios'\nimport PlusIc from '../img/plus.svg'\nimport EditTheory from './editTheory'\nimport EditTask from './editTask'\n\nexport default function Base() {\n\tconst history = useHistory();\n\n\tconst [tasks, setTasks] = useState([])\n\tconst [theories, setTheories] = useState([])\n\tconst [currIDTask, setCurrIDTask] = useState(-1);\n\tconst [currIDTheory, setCurrIDTheory] = useState(-1);\n\tconst [activeTab, setActiveTab] = useState(1);\n\n\tconst [showSidebar, setShowSidebar] = useState(true);\n\tconst [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n\tconst onWindowResize = useGlobalEvent('resize');\n\n\t// this is fine, don't worry about it\n\tonWindowResize((event: SyntheticEvent) => {\n\t\tsetWindowWidth(window.innerWidth);\n\t})\n\n\tconst toggle = tab => {\n\t\tsetCurrIDTask(-1);\n\t\tsetCurrIDTheory(-1);\n\t\tsetShowSidebar(true);\n\t\tif (activeTab !== tab) \n\t\t\tsetActiveTab(tab);\n\t}\n\n\tuseEffect(() => {\n\t\tconst getAll = async () => {\n\t\t\tconst th = await fetchTheories();\n\t\t\tconst tas = await fetchTasks();\n\t\t\tsetTasks(tas);\n\t\t\tsetTheories(th);\n\t\t}\n\t\tgetAll()\n\t}, [])\n\t\n\tconst fetchTheories = async () => {\n\t\tconst responce = await axios.get('https://6099651699011f0017140ca7.mockapi.io/theories/')\n\t\treturn responce.data;\n\t}\n\n\tconst fetchTasks = async () => {\n\t\tconst responce = await axios.get('https://6099651699011f0017140ca7.mockapi.io/tasks/')\n\t\treturn responce.data;\n\t}\n\n\tconst DisplayListTasks = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t{tasks.map(task => (\n\t\t\t\t<NavItem key = {task.id} \n\t\t\t\tclassName = {classnames({chosenSidebar: currIDTask === task.id})}>\t \n\t\t\t\t\t<NavLink onClick = {() => {setCurrIDTask(task.id); setShowSidebar(false)}} id = {\"tooltip\" + task.id}>\n\t\t\t\t\t\t\t{task.text.length > 50 ? \n\t\t\t\t\t\t\t`${task.text.substring(0, 50)}...` : task.text}\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t{ /* causes the transition and findDOMNode warnngs */}\n\t\t\t\t\t<UncontrolledTooltip placement = \"bottom\" target = {\"tooltip\"+ task.id}>\n\t\t\t\t\t\t{task.text}\t\t\t\n\t\t\t\t\t</UncontrolledTooltip>\n\t\t\t\t</NavItem>\n\t\t\t))}\n\t\t\t</>\n\t\t)\n\t}\n\n\tconst DisplayListTheories = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t{theories.map(theory => (\n\t\t\t\t<NavItem key = {theory.id}\n\t\t\t\tclassName = {classnames({chosenSidebar: currIDTheory === theory.id})}>\t \n\t\t\t\t\t<NavLink onClick = {() => {setCurrIDTheory(theory.id); setShowSidebar(false)}}>\n\t\t\t\t\t\t\t{theory.title}\n\t\t\t\t\t</NavLink>\n\t\t\t\t</NavItem>\n\t\t\t))}\n\t\t\t</>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Nav tabs className = \"tabWrapper\">\n\t\t\t\t<NavItem>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tclassName={classnames({ active: activeTab === 1 })}\n\t\t\t\t\t\tonClick={() => { toggle(1); }} >\n\t\t\t\t\t\tЗадания\n\t\t\t\t\t</NavLink>\n\t\t\t\t</NavItem>\n\t\t\t\t<NavItem>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tclassName={classnames({ active: activeTab === 2 })} \n\t\t\t\t\t\tonClick={() => { toggle(2); }}>\n\t\t\t\t\t\tТеория\n\t\t\t\t\t</NavLink>\n\t\t\t\t</NavItem>\n\t\t\t</Nav>\n\t\t\t<TabContent activeTab={activeTab}>\n\t\t\t\t<TabPane tabId = {1}>\n\t\t\t\t\t<Row style = {{marginRight: \"0\", paddingBottom: \"80px\"}}>\n\t\t\t\t\t\t{(showSidebar || windowWidth > 768) && \n\t\t\t\t\t\t<Col className = \"sidebar\">\n\t\t\t\t\t\t\t<Nav vertical>\n\t\t\t\t\t\t\t\t<NavItem className = {classnames({chosenSidebar: currIDTask === 0})}>\n\t\t\t\t\t\t\t\t\t<NavLink onClick = {() => setCurrIDTask(0)}>\n\t\t\t\t\t\t\t\t\t\t<img alt = \" \" src = {PlusIc}></img>\n\t\t\t\t\t\t\t\t\t\t<span>Добавить новое задание</span>\n\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t\t\t<div className = \"dropdown-divider\"></div>\n\t\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t\t<DisplayListTasks />\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{ \n\t\t\t\t\t\tcurrIDTask !== -1 \n\t\t\t\t\t\t? <EditTask task = {tasks.find(task => task.id === currIDTask)}/> \n\t\t\t\t\t\t: <Col className = {classnames({dontShowMd: showSidebar}) + \" notChosenPlaceholder\"} >\n\t\t\t\t\t\t\t<p>Выберите элемент для начала работы</p></Col>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Row>\n\t\t\t\t</TabPane>\n\t\t\t\t<TabPane tabId = {2}>\n\t\t\t\t\t<Row style = {{marginRight: \"0\", paddingBottom: \"80px\"}}>\n\t\t\t\t\t\t{(showSidebar || windowWidth > 768) && \n\t\t\t\t\t\t<Col className = \"sidebar\">\n\t\t\t\t\t\t\t<Nav vertical>\n\t\t\t\t\t\t\t\t<NavItem className = {classnames({chosenSidebar: currIDTheory === 0})}>\n\t\t\t\t\t\t\t\t\t<NavLink onClick = {() => setCurrIDTheory(0)}>\n\t\t\t\t\t\t\t\t\t\t<img alt = \" \" src = {PlusIc}></img>\n\t\t\t\t\t\t\t\t\t\t<span>Добавить новый теоретический материал</span>\n\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t\t\t<div className = \"dropdown-divider\"></div>\n\t\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t\t<DisplayListTheories />\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{ \n\t\t\t\t\t\tcurrIDTheory !== -1 \n\t\t\t\t\t\t? <EditTheory theory = {theories.find(theory => theory.id === currIDTheory)}/>\n\t\t\t\t\t\t: <Col className = {classnames({dontShowMd: showSidebar}) + \" notChosenPlaceholder\"} >\n\t\t\t\t\t\t\t<p>Выберите элемент для начала работы</p></Col>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Row>\n\t\t\t\t</TabPane>\n\t\t\t</TabContent>\n\t\t\t<div className = \"customFooter\">\n\t\t\t\t\t<Button style = {{marginTop: \"15px\", marginLeft: \"20px\", width: \"200px\"}}\n\t\t\t\t\tclassName = \"possiblyHidden\"\n\t\t\t\t\tonClick = {() => setShowSidebar(!showSidebar)}>\n\t\t\t\t\t\tПоказать задания\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button \n\t\t\t\t\tstyle = {{float: \"right\", marginTop: \"15px\", marginRight: \"40px\", width: \"200px\"}}\n\t\t\t\t\tclassName = \"redBtn\" \n\t\t\t\t\tonClick = {() => history.push('/teacher')}>\n\t\t\t\t\t\t\tВернуться в ЛК\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { useState, useEffect } from 'react'\nimport classnames from 'classnames'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nimport {\n\tNav,\n\tNavItem,\n\tNavLink,\n\tTabPane, \n\tTabContent,\n\tButton,\n\tFormGroup,\n\tForm,\n\tInput,\n\tLabel\n} from 'reactstrap'\n\nexport default function GiveTask() {\n\n\tconst history = useHistory();\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\t\n\t\tif (activeTab !== 4)\n\t\t\treturn\n\t\t\n\t\tconsole.log(\"students: \", chosenStudents, \"theory:\", chosenTheory, \"tasks:\", chosenTasks);\n\t\t\n\t\tsetChosenTasks([]);\n\t\tsetChosenStudents([]);\n\t\tsetChosenTheory(0);\n\n\t\tsetActiveTab(1);\n\t}\n\n\tconst [stlist, setstlist] = useState([])\n\tconst [tasklist, settasklist] = useState([])\n\tconst [theorylist, settheorylist] = useState([])\n\n\tconst [chosenTheory, setChosenTheory] = useState(0);\n\tconst [chosenTasks, setChosenTasks] = useState([]);\n\tconst [chosenStudents, setChosenStudents] = useState([])\n\n\n\tconst fetchStudents = async () => {\n\t\tconst responce = await axios.get('https://6099651699011f0017140ca7.mockapi.io/students/')\n\t\treturn responce.data;\n\t}\n\n\tconst fetchTheory = async () => {\n\t\tconst responce = await axios.get('https://6099651699011f0017140ca7.mockapi.io/theories/')\n\t\treturn responce.data;\n\t}\n\n\tconst fetchTasks = async () => {\n\t\tconst responce = await axios.get('https://6099651699011f0017140ca7.mockapi.io/tasks/')\n\t\treturn responce.data;\n\t}\n\n\tuseEffect(() => {\n\t\tconst getAll = async () => {\n\t\t\tconst stl = await fetchStudents();\n\t\t\tconst tl = await fetchTasks();\n\t\t\tconst thl = await fetchTheory();\n\t\t\t\n\t\t\tsetstlist(stl);\n\t\t\tsettasklist(tl);\n\t\t\tsettheorylist(thl);\n\t\t}\n\t\tgetAll();\n\t}, [])\n\n\tconst [activeTab, setActiveTab] = useState(1);\n\n\tconst toggle = tab => {\n\t\tif (activeTab !== tab) \n\t\t\tsetActiveTab(tab);\n\t}\n\n\tconst onChangeTasks = (e) => {\n\t\tlet newArray = [...chosenTasks, e.target.id]\n\t\tif (chosenTasks.includes(e.target.id)) {\n\t\t\tnewArray = newArray.filter(task => task !== e.target.id)\n\t\t}\n\t\tsetChosenTasks(newArray)\n\t} \n\t\n\tconst onChangeStudents = (e) => {\n\t\tlet newArray = [...chosenStudents, e.target.id];\n\t\tif (chosenStudents.includes(e.target.id)) {\n\t\t\tnewArray = newArray.filter(student => student !== e.target.id)\t\n\t\t}\n\t\tsetChosenStudents(newArray)\n\t}\n\n\tconst DisplayStudents = () => {\n\t\treturn \t<FormGroup check style = {{marginLeft: \"25px\"}}>\n\t\t\t\t\t{\n\t\t\t\t\t\tstlist.map(student => (\n\t\t\t\t\t\t\t<Label check key = {student.id}\n\t\t\t\t\t\t\tclassName = \"taskSelection\">\n\t\t\t\t\t\t\t\t<Input type = \"checkbox\" id = {student.id}\n\t\t\t\t\t\t\t\tchecked = {chosenStudents.includes(student.id)}\n\t\t\t\t\t\t\t\tonChange = {onChangeStudents}/>\n\t\t\t\t\t\t\t\t{student.stName}\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</FormGroup>\n\t}\n\n\tconst DisplayTasks = () => {\n\t\treturn \t<FormGroup check style = {{marginLeft: \"25px\"}}>\n\t\t\t\t\t<h4 className = \"taskDifficultyLine\">Задания базового уровня сложности</h4>\n\t\t\t\t\t{\n\t\t\t\t\t\ttasklist.filter(task => {\n\t\t\t\t\t\t\treturn task.difficulty === '1'\n\t\t\t\t\t\t}).map(task => {\n\t\t\t\t\t\t\treturn <Label check key = {task.id}\n\t\t\t\t\t\t\tclassName = \"taskSelection\">\n\t\t\t\t\t\t\t\t<Input type = \"checkbox\" id = {task.id}\n\t\t\t\t\t\t\t\tchecked = {chosenTasks.includes(task.id)}\n\t\t\t\t\t\t\t\tonChange = {onChangeTasks}/>\n\t\t\t\t\t\t\t\t{task.text}\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t<h4 className = \"taskDifficultyLine\">Задания продвинутого уровня сложности</h4>\n\t\t\t\t\t{\n\t\t\t\t\t\ttasklist.filter(task => {\n\t\t\t\t\t\t\treturn task.difficulty === '2'\n\t\t\t\t\t\t}).map(task => {\n\t\t\t\t\t\t\treturn <Label check key = {task.id}\n\t\t\t\t\t\t\tclassName = \"taskSelection\">\n\t\t\t\t\t\t\t\t<Input type = \"checkbox\" id = {task.id}\n\t\t\t\t\t\t\t\tchecked = {chosenTasks.includes(task.id)}\n\t\t\t\t\t\t\t\tonChange = {onChangeTasks}/>\n\t\t\t\t\t\t\t\t{task.text}\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t<h4 className = \"taskDifficultyLine\">Задания высокого уровня сложности</h4>\n\t\t\t\t\t{\n\t\t\t\t\t\ttasklist.filter(task => {\n\t\t\t\t\t\t\treturn task.difficulty === '3'\n\t\t\t\t\t\t}).map(task => {\n\t\t\t\t\t\t\treturn <Label check key = {task.id}\n\t\t\t\t\t\t\tclassName = \"taskSelection\">\n\t\t\t\t\t\t\t\t<Input type = \"checkbox\" id = {task.id}\n\t\t\t\t\t\t\t\tchecked = {chosenTasks.includes(task.id)}\n\t\t\t\t\t\t\t\tonChange = {onChangeTasks}/>\n\t\t\t\t\t\t\t\t{task.text}\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</FormGroup>\n\t}\n\n\tconst DisplayTheory = () => {\n\t\treturn \t<FormGroup tag = \"fieldset\" style = {{marginLeft: \"50px\"}}>\n\t\t\t\t\t{theorylist.map(theory => (\n\t\t\t\t\t\t<FormGroup key = {theory.id}>\n\t\t\t\t\t\t\t<Label check\n\t\t\t\t\t\t\tclassName = \"taskSelection\">\n\t\t\t\t\t\t\t\t<Input type = \"radio\" name = \"radiotheory\" \n\t\t\t\t\t\t\t\tchecked = {chosenTheory === theory.id}\n\t\t\t\t\t\t\t\tvalue = {theory.id}\n\t\t\t\t\t\t\t\tonChange = {(e) => {setChosenTheory(e.target.value)}}/>\n\t\t\t\t\t\t\t\t{theory.title}\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t))}\n\t\t\t\t</FormGroup>\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Nav tabs style = {{marginBottom: \"25px\"}} className = \"tabWrapper tabs3\">\n\t\t\t\t<NavItem>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tclassName={classnames({ active: activeTab === 1 })}\n\t\t\t\t\t\tonClick={() => { toggle(1); }} >\n\t\t\t\t\t\tВыбор темы\n\t\t\t\t\t</NavLink>\n\t\t\t\t</NavItem>\n\t\t\t\t<NavItem>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tclassName={classnames({ active: activeTab === 2 })} \n\t\t\t\t\t\tonClick={() => { toggle(2); }}>\n\t\t\t\t\t\tВыбор заданий\n\t\t\t\t\t</NavLink>\n\t\t\t\t</NavItem>\n\t\t\t\t<NavItem>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tclassName={classnames({ active: activeTab === 3 })} \n\t\t\t\t\t\tonClick={() => { toggle(3); }}>\n\t\t\t\t\t\tВыбор студентов\n\t\t\t\t\t</NavLink>\n\t\t\t\t</NavItem>\n\t\t\t</Nav>\n\t\t\t<Form onSubmit = {onSubmit}>\n\t\t\t\t<TabContent activeTab = {activeTab} style = {{ paddingBottom: \"80px\", paddingRight: \"10px\"}}>\n\t\t\t\t\t<TabPane tabId = {1}>\n\t\t\t\t\t\t<DisplayTheory />\n\t\t\t\t\t</TabPane>\n\t\t\t\t\t<TabPane tabId = {2}>\n\t\t\t\t\t\t<DisplayTasks />\n\t\t\t\t\t</TabPane>\n\t\t\t\t\t<TabPane tabId = {3}>\n\t\t\t\t\t\t<DisplayStudents />\n\t\t\t\t\t</TabPane>\n\t\t\t\t</TabContent>\n\t\t\t\t<div className = \"customFooter\">\n\t\t\t\t\t<Button style = {{float: \"right\", marginTop: \"15px\", marginRight: \"40px\", width: \"200px\"}}\n\t\t\t\t\ttype = \"submit\"\n\t\t\t\t\tonClick = {() => {\n\t\t\t\t\t\t\tsetActiveTab(activeTab + 1);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tПродолжить\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button style = {{marginTop: \"15px\", marginLeft: \"40px\", width: \"200px\"}}\n\t\t\t\t\tclassName = \"redBtn\" \n\t\t\t\t\tonClick = {() => history.push('/teacher')}>\n\t\t\t\t\t\t\tВернуться в ЛК\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Form>\n\t\t</div>\n\t)\n}\n","import { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport LoginPage from \"./Login/LoginPage.jsx\";\nimport RegisterPage from \"./Login/RegisterPage.jsx\";\nimport Teach from \"./Teacher/teacher.jsx\";\nimport Student from \"./Students/student.jsx\"\nimport Base from \"./Teacher/base.jsx\"\nimport GiveTask from \"./Teacher/giveTask.jsx\"\n\nfunction App() {\n\t\n\treturn (\n\t\t\t<Router>\n\t\t\t\t<div style = {{height: \"100%\"}}>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><Link to = \"/teacher\">teacher</Link></li>\n\t\t\t\t\t\t<li><Link to = \"/student\">student</Link></li>\n\t\t\t\t\t\t<li><Link to = \"/give\">give</Link></li>\n\t\t\t\t\t\t<li><Link to = \"/base\">base</Link></li>\n\t\t\t\t\t\t<li><Link to = \"/register\">reg</Link></li>\n\t\t\t\t\t\t<li><Link to = \"/\">login </Link></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path = \"/teacher\">\n\t\t\t\t\t\t\t<Teach></Teach>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path = \"/student\">\n\t\t\t\t\t\t\t<Student></Student>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path = \"/give\">\n\t\t\t\t\t\t\t<GiveTask></GiveTask>\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path = \"/base\">\n\t\t\t\t\t\t\t<Base></Base>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path = '/register'>\n\t\t\t\t\t\t\t<RegisterPage></RegisterPage>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path = '/'>\n\t\t\t\t\t\t\t<LoginPage></LoginPage>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//import { BehaviorSubject } from 'rxjs'\n\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}