+ func (p *Player) AddStudent(String) StudentID
+ func (p *Player) ZapStudent(StudentID)
добавить-удалить студента

+ GetStudents() MapStudentIDString

+ func (p *Player) NewTask(Task, TheoryID) TaskID
+ func (p *Player) RenewTask(TaskID, Task, TheoryID)
+ func (p *Player) StGetTask(TaskID) Task
+ func (p *Player) ZapTask(TaskID)
добавить-изменить-получить-удалить задания

+ func (p *Player) NewTheory(Theory) TheoryID
+ func (p *Player) RenewTheory(TheoryID, Theory)
+ func (p *Player) StGetTheory(TheoryID) Theory
+ func (p *Player) ZapTheory(TheoryID)
тоже самое, но с теорией

+ func (p *Player) Appoint(StudentIDArray, TaskIDArray)
назначить студентам массива задания
(научите этого еблана композиции уже)

+ func (p *Player) GetStats(StudentID) MapTheoryIDStats
получить статистику по студенту

+ func (p *Player) TheoryNames() MapTheoryIDString

+ func (p *Player) StSelfStats() MapTheoryIDStats
получить статистику по студенту для самого студента

+ func (p *Player) Unread() MapStudentIDTaskID
получить все непроверенные задания, на которые студенты дали ответы

+ func (p *Player) LoadAnswer(StudentID, TaskID) *Task
получить ответ на задание, которое дал студент

+ func (p *Player) Rate(StudentID, TaskID, String, Bool)
оценить задание, выданное студенту
c опциональным комментарием

+ func (p *Player) StSendAnswers(TaskID, Task) Int
отправить ответ на задание
возвращает количество оставшихся попыток
после того, как эта фция вернёт 0 сделать 
ответ будет нельзя

func (p *Player) StGetAnswers(TaskID) Task
возвращает правильный ответ на задание
срабатывает только тогда, когда StSendAnswers
возвращает 0

+ func (p *Player) StSent() ArrayTaskID
возвращает массив отправленных задач

+ func (p *Player) StRating() MapTaskIDInt
возвращает баллы за все задания

func (p *Player) StRatedOpen() MapTaskIDBool
были ли проверены выданные задания открытого типа?

func (p *Player) StCommentary(TaskID) String
возвращает комментарии преподавателя на требуемый таск
если ид принадлежит закрытому вопросу, то всегда
на такой ид вернёт пустую строку

func (p *Player) SetCoeff(Int)

+ func (p *Player) StLogout()
+ StRegister(new String)

таблицы:
logins (id integer primary key, hash integer, names string, role integer)
tasks (id integer primary key, theoryid integer, data bytea)
theory (id integer primary key, data bytea)
appointments (sid integer, taskid integer, complete boolean, correct boolean, rated boolean, tries integer, answer bytea, 
	comment varchar)
// automatic (sid integer, taskid integer, correct boolean, tries integer)
// manual (sid integer, taskid integer, correct boolean, rated boolean, comment boolean)
// appointments (sid integer, taskid integer, complete boolean, correct boolean, tries integer)
// alter table answers add constraint anscons unique(sid, taskid)
// answers (sid integer, taskid integer, data bytea)
// alter table appointments add constraint appcons unique(sid, taskid)
// rating (sid integer, taskid integer, rated bool, comment varchar)

case when select (sid, taskid) from answers where sid = $1 and taskid = $2 is not null then
	insert into answers (sid, taskid, data) values ($1, $2, $3)
else
	update values set data = $3 where sid = $1 and taskid = $2
end
