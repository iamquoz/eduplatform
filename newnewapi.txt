func AddStudent(String) StudentID
func ZapStudent(StudentID)
добавить-удалить студента

GetStudents() MapStudentIDString

func NewTask(Task, TheoryID) TaskID
func RenewTask(TaskID, Task, TheoryID)
func StGetTask(TaskID) Task
func ZapTask(TaskID)
добавить-изменить-получить-удалить задания

func NewTheory(Theory) TheoryID
func RenewTheory(TheoryID, Theory)
func StGetTheory(TheoryID) Theory
func ZapTheory(TheoryID)
тоже самое, но с теорией

func Appoint(StudentIDArray, TheoryID, TaskIDArray)
назначить студентам задание из теории и массива заданий
(научите этого еблана композиции уже)

func GetStats(StudentID) Stats
получить статистику по студенту

func StSelfStats() Stats
получить статистику по студенту для самого студента

func Unread() MapStudentIDTaskID
получить все непроверенные задания, на которые студенты дали ответы

func Rate(StudentID, TaskID, String, Bool)
оценить задание, выданное студенту
c опциональным комментарием

func StSendAnswers(TaskID, Task) Int
отправить ответ на задание
возвращает количество оставшихся попыток
после того, как эта фция вернёт 0 сделать 
ответ будет нельзя

func StGetAnswers(TaskID) Task
возвращает правильный ответ на задание
срабатывает только тогда, когда StSendAnswers
возвращает 0

func StSent() ArrayTaskID
возвращает массив отправленных задач

func StRating() MapTaskIDInt
возвращает баллы за все задания

func StRatedOpen() MapTaskIDBool
были ли проверены выданные задания открытого типа?

func StCommentary(TaskID) String
возвращает комментарии преподавателя на требуемый таск
если ид принадлежит закрытому вопросу, то всегда
на такой ид вернёт пустую строку

func StLogout()
StRegister(new String)

таблицы:
theory (id integer, data bytea)
logins (id integer, hash integer, names string, role integer)
tasks (id integer, TheoryID integer, data bytea)
appointments (sid integer, taskid integer, complete boolean, correct boolean)
rating (sid integer, taskid integer, rated bool, comment varchar)
